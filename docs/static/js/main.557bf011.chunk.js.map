{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifItem.js","components/GifList.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","ev","preventDefault","trim","length","categories","action","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifItem","src","alt","GifList","GifExpertApp","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,mCACE,sBAAMC,UAAU,OAAOC,SAbN,SAACC,GACpBA,EAAGC,iBAECL,EAAWM,OAAOC,OAAS,GAC7BT,GAAc,SAACU,GAAD,OAAiBR,GAAjB,mBAAgCQ,OAC9CP,EAAc,KACLD,EAAWM,OAAOC,OAAS,GACpCN,EAAc,0BAMiCQ,OAAO,IAAtD,SACE,uBAAOP,UAAU,aAAaQ,YAAY,MAAMC,KAAK,OAAOC,MAAOZ,EAAYa,SAlBhE,SAACT,GACpBH,EAAcG,EAAGU,OAAOF,e,+BCNtBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGRC,EAHQ,iDAGwCC,UACpDH,GAJY,+DAOKI,MAAMF,GAPX,cAORG,EAPQ,gBAQSA,EAAKC,OARd,uBAQNC,EARM,EAQNA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdxB,kBAkBPM,GAlBO,4CAAH,sDAsBET,ICDAgB,EAlBM,SAACf,GACpB,MAA0BjB,mBAAS,CACjCwB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACP,GACtBK,EAAS,CACPX,KAAMM,EACNG,SAAS,SAGZ,CAAChB,IAEGiB,GCPMI,EAXC,SAAC,GAAuB,EAArBV,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG5B,OACE,0BAAShB,UAAU,gDAAnB,UACE,qBAAKA,UAAU,aAAaoC,IAAKpB,EAAKqB,IAAKX,IAC3C,mBAAG1B,UAAU,YAAb,SAA0B0B,QCFnBY,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SACxB,EAAkCe,EAAaf,GAAjCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACE,qCACE,6BAAKhB,IAEJgB,GACC,mBAAG9B,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACG2B,EAAOJ,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA0BA,GAAZA,EAAIC,aCKpBc,EAlBM,WACnB,MAAoC1C,mBAAS,CAAC,QAA9C,mBAAOS,EAAP,KAAmBV,EAAnB,KAEA,OACE,qCACE,oBAAII,UAAU,aAAd,oBACA,cAAC,EAAD,CAAaJ,cAAeA,IAC5B,uBAEA,6BACGU,EAAWiB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCRzB0B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.557bf011.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleChange = (ev) => {\r\n    setInputValue(ev.target.value);\r\n  };\r\n  //modifico el estado de categories con el callback y le anado el nuevo valor del input. Ojo, las props solo reciben la funcion del setState, no el array.\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue(\"\");\r\n    } else if (inputValue.trim().length < 2) {\r\n      setInputValue(\"Prueba algo mas largo\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={handleSubmit} action=\"#\">\r\n        <input className=\"form-input\" placeholder=\"cat\" type=\"text\" value={inputValue} onChange={handleChange} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","const getGifs = async (category) => {\r\n  // const apiKey = \"s3FCXAhQH9DzdK0AVSXPf143BNw3eai2\";\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=s3FCXAhQH9DzdK0AVSXPf143BNw3eai2`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n  // console.log(gifs);\r\n};\r\n\r\nexport default getGifs;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((images) => {\r\n      setState({\r\n        data: images,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","const GifItem = ({ id, title, url }) => {\r\n  // console.log({ id, title, url });\r\n\r\n  return (\r\n    <article className=\"card animate__animated animate__fadeInDownBig\">\r\n      <img className=\"card-image\" src={url} alt={title} />\r\n      <p className=\"card-text\">{title}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default GifItem;\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifItem from \"./GifItem\";\r\n\r\nexport const GifList = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n\r\n      <div className=\"card-list\">\r\n        {images.map((img) => {\r\n          return <GifItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport { GifList } from \"./components/GifList\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"cat\"]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"page-title\">GifApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr></hr>\r\n\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifList key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nconst divRoot = document.querySelector(\"#root\");\n\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}